# -*- coding: utf-8 -*-
"""powerball_simulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PFsC_ZKT7KiPuLOfPN64TjeGCCgMORdV
"""

import random
import json

# instantiate powerball possibles
white_possibles = list(range(1, 70))
red_possibles = list(range(1, 27))

# Power ball Simulations constants
number_of_drawing_per_week = 3
number_drawing_per_year = number_of_drawing_per_week * 52
tickets_per_drawing = 100  # number of tickets bought
num_drawing = 15600

# keep track of the amount of money we spent
total_spent = 0
earnings = 0


# keep track of the number of times we won
times_won = {
    "5+P": 0,
    "5": 0,
    "4+P": 0,
    "4": 0,
    "3+P": 0,
    "3": 0,
    "2+P": 0,
    "1+P": 0,
    "P": 0,
    "0": 0,
}


def calculate_win_amount(my_numbers, winning_numbers):
    """
    Calculate the win amount

    Parameters
    -------------
    my_numbers: dict
    winning_numbers: dict

    Returns
    -------
    win_amt:
    """

    win_amt = 0
    white_matches = len(my_numbers["whites"].intersection(winning_numbers["whites"]))
    power_match = my_numbers["red"] == winning_numbers["red"]

    if white_matches == 5:
        if power_match:
            win_amt = 2_000_000_000
            times_won["5+P"] += 1
        else:
            win_amt = 1_000_000_000
            times_won["5"] += 1

    elif white_matches == 4:
        if power_match:
            win_amt = 50_000
            times_won["4+P"] += 1
        else:
            win_amt = 100
            times_won["4"]

    elif white_matches == 3:
        if power_match:
            win_amt = 100
            times_won["3+P"] += 1
        else:
            win_amt = 7
            times_won["3"] += 1

    elif white_matches == 2 and power_match:
        win_amt = 7
        times_won["2+P"] += 1

    elif white_matches == 1 and power_match:
        win_amt = 4
        times_won["1+P"] += 1

    elif power_match:
        win_amt = 4
        times_won["P"] += 1

    else:
        win_amt = 0
        times_won["0"] += 1

    return win_amt


# stimating the draws

for drawing in range(num_drawing):
    white_drawing = set(random.sample(white_possibles, k=5))
    red_drawing = random.choice(red_possibles)

    # combine an instance of the winning combination
    winning_numbers = {"whites": white_drawing, "red": red_drawing}

    for _ in range(tickets_per_drawing):
        total_spent += 2
        my_whites = set(random.sample(white_possibles, k=5))
        my_red = random.choice(red_possibles)

        my_numbers = {"whites": my_whites, "red": my_red}

        win_amt = calculate_win_amount(my_numbers, winning_numbers)
        earnings += win_amt

print(f"Spent: ${total_spent} ")
print(f"Earning ${earnings}")


print(json.dumps(times_won, indent=2))
